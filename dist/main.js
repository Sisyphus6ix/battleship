(()=>{"use strict";function t(t,i){this.x=t,this.y=i,this.getX=function(){return this.x}.bind(this),this.getY=function(){return this.y}.bind(this)}function i(t,i,e,s,n){this.name=t,this.length=i,this.timesHit=e,this.status=s,this.coords=n,this.hit=function(){this.timesHit++,this.timesHit==this.length&&(this.status="sunk")}.bind(this),this.hasSunk=function(){return alert(`${t} has been sunk`)}.bind(this)}function e(i){this.size=i,this.fleet=[],this.boardSpaces=[],this.placeShip=function(t){for(let i=0;i<t.coords.length;i++){let e=t.coords[i].getX(),s=t.coords[i].getY();this.boardSpaces.push({x:e,y:s,theShip:t})}this.fleet.push(t)}.bind(this),this.recieveAttack=function(i,e){let s=new t(i,e);const n=s.getX(),h=s.getY();console.log("Check these coordinates",{x:n,y:h});const o=this.boardSpaces.filter((t=>t.x==n&&t.y==h));if(!(o.length>0))return console.log("The attack missed"),this.boardSpaces.push({x:n,y:h,Status:"Missed"});o[0].theShip.hit(),console.log(`${o[0].theShip.name} has been hit`)}.bind(this),this.updateFleetStatus=function(){const t=this.fleet.find((t=>"sunk"==t.status)),i=this.fleet.indexOf(t);return i>-1&&this.fleet.splice(i,1),void 0===t?"":t.hasSunk()}.bind(this),this.isGameOver=function(){if(0==this.fleet.length)return alert("The game is over")}.bind(this)}new i("Carrier",5,0,"sailing",[new t(5,5),new t(10,10),new t(6,6),new t(11,8),new t(8,9)]),new i("Battleship",4,0,"sailing",[new t(2,4),new t(4,5),new t(5,4),new t(7,7)]),new i("Cruiser",3,0,"sailing"),new i("Submarine",3,0,"sailing"),new i("Destroyer",2,0,"sailing");let s=new function(t){this.name="Computer",this.ships=[],this.gameBoard=new e(10),this.getName=function(){return this.name}.bind(this)}("Computer");console.log(s)})();