(()=>{"use strict";function t(t,e){this.x=t,this.y=e,this.getX=function(){return this.x}.bind(this),this.getY=function(){return this.y}.bind(this)}function e(t,e,i,s,n){this.name=t,this.length=e,this.timesHit=i,this.status=s,this.coords=n,this.hit=function(){this.timesHit++,this.timesHit==this.length&&(this.status="sunk")}.bind(this),this.isSunk=function(){if(this.timesHit===this.length)return alert(`Gameover ${t} has been sunk`)}.bind(this)}const i=[new e("Carrier",5,0,"sailing",[new t(5,5),new t(10,10),new t(6,6),new t(11,8),new t(8,9)]),new e("Battleship",4,0,"sailing",[new t(2,4),new t(4,5),new t(5,4),new t(7,7)]),new e("Cruiser",3,0,"sailing"),new e("Submarine",3,0,"sailing"),new e("Destroyer",2,0,"sailing")];let s=new function(e){this.size=20,this.fleet=[],this.boardSpaces=[],this.placeShip=function(t){for(let e=0;e<t.coords.length;e++){let i=t.coords[e].getX(),s=t.coords[e].getY();this.boardSpaces.push({x:i,y:s})}this.fleet.push(t)}.bind(this),this.recieveAttack=function(e,i){let s=new t(e,i);const n=s.getX(),h=s.getY();console.log("Check for these coordinates",{x:n,y:h});for(let t of this.boardSpaces)t.x==n&&t.y==h&&console.log("There is a ship at these coordinates",{x:n,y:h});for(let t of this.fleet)for(let e of t.coords)e.x==n&&e.y==h&&(console.log(`${t.name} has been hit`),t.hit())}.bind(this)}(20);s.placeShip(i[0]),s.placeShip(i[1]),console.log(s),s.recieveAttack(4,5),console.log(s)})();